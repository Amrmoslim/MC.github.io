shiny::runApp('SGR')
install.packages("Rquake")
?rquake
library(Rquake)
convertseis2R(choose.files(),destdir = (choose.dir()))
load("C:/Altamira/PETCE12.RDATA")
doAmap(PETCE12.RDATA)
viewseis(DBnov = DAT, rplot=TRUE ,kind = 0)
viewseis(DBnov = DAT,kind = 0)
swig(DAT,SHOWONLY=FALSE)
install.packages("RSEIS")
install.packages("RPMG")
install.packages("Rwave")
data(KH)
data("quakes")
swig(KH)
print(.Platform$endian)
1 = JSAC.seis(choose.files(), Iendian=1, HEADONLY=TRUE , BIGLONG=FAL
SE, PLOT=FALSE)
j1 = JSAC.seis(choose.files(), Iendian=1, HEADONLY=TRUE , BIGLONG=FAL
SE, PLOT=FALSE)
Amr = JSAC.seis(choose.files(), Iendian=1, HEADONLY=TRUE , BIGLONG=FAL
SE, PLOT=FALSE)
library(RSEIS,Rwave,RPMG)
library(RSEIS; Rwave; RPMG)
library(RSEIS)
library(Rwave)
library(RPMG)
Amr = JSAC.seis(choose.files(), Iendian=1, HEADONLY=TRUE , BIGLONG=FAL
SE, PLOT=FALSE)
shiny::runApp('SGR')
runApp('SGR')
runApp('SGR')
install.packages("stargazer")
knitr::opts_chunk$set(echo = TRUE)
###################### Calculate the SD ###########################################
Ftsd <- sd(Ftp90:Ftp10)
###################### Calculate the SD ###########################################
Ftsd <- sd(Ftp90:Ftp10)
###################### Calculate the SD ###########################################
Ftsd <- sd(Ftp90:Ftp10)
install.packages("prettydoc")
shiny::runApp('SGR')
runApp('SGR')
shiny::runApp('SGR')
install.packages("DT")
install.packages("DT")
shiny::runApp('SGR')
runApp('SGR')
